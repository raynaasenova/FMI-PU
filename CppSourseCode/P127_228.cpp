// P127_228.cpp : Да се генерира по случаен начин едномерен масив от цели числа в интервала [-100;100]. Да се намери:
//а) сумата на тези елементи, чиято абсолютна стойност надхвърля 30;
//б) произведението на ненулевите нечетни елементи;
//в) броят на елементите с четен индекс, които са в интервала [-30;30];
//г) средно аритметично на елементите, които се делят на 5 без остатък;
//д) средно квадратично на елементите, чиито пореден номер се дели на 3 без остатък (всяко 3-то число);
//е) средно геометрично на елементите, които принадлежат на интервала (6,50];
//ж) средно хармонично на елементите, които не принадлежат на интервала (-6,50].
#include "stdafx.h"
#include <iostream>
#include <windows.h>
#include <ctime> 
using namespace std;

typedef int intvect[100];

void InputRan(intvect a, unsigned int n)
  { for (int i=0;i<n;i++) a[i]=rand()%201-100; }

void output(intvect a, unsigned int n)
   { for (int i=0;i<n;i++) cout<<a[i]<<" ";
     cout<<endl; }

int main()
{
	SetConsoleOutputCP(1251);
	srand(time(NULL));
	cout << "Въведете броя елементи на масива :n>=1:"; int n; cin >> n;
	if (n < 1 || !cin) { cout << "Error!"; return 1; }
	intvect a; InputRan(a, n);
	output(a, n);
	//а) сумата на тези елементи, чиято абсолютна стойност надхвърля 30;
	long s = 0; 
	for (int i = 0; i<n; i++)  if (abs(a[i])>30) s = s + a[i];
	cout << "а) сумата на тези елементи, чиято абсолютна стойност надхвърля 30 е: " << s << endl;
	cout << endl;

	//б) произведението на ненулевите нечетни елементи;
	long p = 1; 
	for (int i = 0; i < n; i++)
		if (a[i] % 2 != 0 && a[i] != 0)
			p *= a[i];
				
	cout << "б) поизведението на ненулевите нечетни елементи е: " << p << endl;
	cout << endl;

	//в) броят на елементите с четен индекс, които са в интервала [-30;30];
	int broi = 0;
	for (int i = 0; i < n; i++)
		if (i % 2 == 0 && (a[i] >= -30 && a[i] <= 30)); broi++;	
	cout << "в) броят на елементите с четен индекс, които са в интервала [-30;30] е: " << broi << endl;
	cout << endl;

	//г) средно аритметично на елементите, които се делят на 5 без остатък;
	double sum = 0, sra = 0;  int broiSra = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i] % 5 == 0)
		{
			broiSra++;
			sum += a[i];
			sra = sum / broiSra;
		}
	}
	if (broiSra == 0)
	{
		cout << "г) масивът не съдържа елементи, които се делят на 5 без остатък." << endl; 
		cout << endl; 
		return 1;
	}
	else
	{
		cout << "г) броят на елементите, който се делят на 5 без остатък е: " << broiSra << endl;
		cout << "средноаритметичното им е: " << sra << endl;
		cout << endl;
	}		

	//д) средно квадратично на елементите, чиито пореден номер се дели на 3 без остатък (всяко 3-то число);
	double srk, ssrk = 0; int i;
	for (int i = 3; i < n; i++)
		if (i % 3 == 0)
		{			
			ssrk += pow(a[i], 2) *1.0 / n;
			srk = sqrt(ssrk);	
			cout << "i = " << i;
		}
	cout << "д) средноквадратичното на всеки трети елемент е: "<< srk << endl;
	cout << endl;
	
	//е) средно геометрично на елементите, които принадлежат на интервала (6,50];
	double srg, psrg = 1;
	for (int i = 0; i < n; i++)
		if (a[i] > 6 && a[i] <= 50)
		{
			psrg *= a[i];
			srg = pow(a[i], 1.0 / n);			
		}
	cout <<"е) средногеометричното на елементите, които принадлежат на интервала (6,50] е: "<< srg << endl;
	cout << endl;

	//ж) средно хармонично на елементите, които не принадлежат на интервала (-6,50].
	double srh = 0; int broiSrh = 0;
	for (int i = 0; i < n; i++)
		if (a[i] > -6 || a[i] <= 50)
		{			
			srh = srh + 1.0 / a[i];
			broiSrh++;
			cout << "(" << a[i] << ")";
		}
	cout << endl;
		if (broiSrh > 0)
		{
			srh = broiSrh / srh;
		}	
	cout << "ж) среднохармоничното на елементите, които не принадлежат на интервала (-6,50] e: " << srh << endl;
	cout << endl;
}